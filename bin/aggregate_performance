#!/usr/bin/env python
# Author: Nils Fischer <n.fischer@viwid.com>
# Tool to run performance aggregations over the FWJR database in HDFS.

import argparse
import datetime
import subprocess
import os

import logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)


def parse_day(s):
    try:
        return datetime.datetime.strptime(s, '%Y-%m-%d').date()
    except ValueError:
        return datetime.date.today() - datetime.timedelta(days=int(s))
    except:
        raise argparse.ArgumentTypeError("Please provide a date formatted like YYY-MM-DD or a number of days ago, e.g. 0 for today or 1 for yesterday.")

parser = argparse.ArgumentParser(description="Run performance aggregations over the FWJR database.")
parser.add_argument('-d', '--day', required=True, type=parse_day, help="The day of FWJR data to aggregate over, formatted like YYY-MM-DD or a number of days ago, e.g. 0 for today or 1 for yesterday.")
args = parser.parse_args()

logger.info("Aggregating performance data for {}...".format(args.day))

from WMArchive.PySpark import RecordAggregator
aggregation_script = RecordAggregator.__file__.replace('.pyc', '.py')
logger.debug("Using aggregation script in {}".format(aggregation_script))

hdfs_path_prefix = '/cms/wmarchive/avro/'

hdfs_path = hdfs_path_prefix + '{year:04d}/{month:02d}/{day:02d}'.format(year=args.day.year, month=args.day.month, day=args.day.day)
logger.debug("Path in HDFS: {}".format(hdfs_path))

subprocess.call([ os.path.join(os.path.dirname(__file__), 'myspark'), '--hdir=hdfs://' + hdfs_path, '--schema=hdfs://' + hdfs_path_prefix + 'schemas/current.avsc', '--script=' + aggregation_script ])
